git remote -v           // проверяет принадлежит ли папка к репозиторию
git init               // инициализация новой корневой папки в Git  (U)
git add .              // индексация всей директории в Git (A)
git commit -m "init"   // коммит
Ctrl+l                 // очистка терминала

git log                   // просмотр истории коммитов (сохраненный изменений кода)
git log --oneline         // просмотр истории коммитов (компактный вывод информации)
git checkout <commit id>  // можно посмотреть "прошлое" по идентификатору коммита, кот можно взять в log
git checkout main         // вернуться в "настоящее"

q                          // выход из истории коммитов, если нужно
git remote add origin https://github.com/AnastasiiaPodlesna/AIT_Git_Test.git // привязываем к удаленному репозиторию
git branch -M main         // ветка
git push -u origin main    // 
git remote remove origin   // отвязаться от удаленного репозитория
git git pull               // притягивает изменения из удаленной репозитории на локальный гит
git branch header          // создание нов ветки в локальном репозитории (в новую ветку все копируется при создании)
git checkout header        // переключение на новую ветку по указанному имени 
git merge header           // слить изменения из header в main

// команда генерирования ssh ключа на Git :  ssh-keygen -t ed25519 -C "nisana@ukr.net", вводим эту строку в терминал, три раза enter, потом получаем ключ командой cat ~/.ssh/id_ed25519.pub

eval "$(ssh-agent -s)" - команда, которая позволит без пароля работать (вводить в терминале Git Bash)
команда запускает SSH-агент, который является фоновым процессом, управляющим SSH-ключами. SSH-агент сохраняет ключи в памяти, чтобы не требовать их ввод каждый раз при установлении SSH-соединения.

ssh-add ~/.ssh/id_ed25519 - команда добавляет SSH-ключ в SSH-агент для автоматического использования при подключении по SSH. После выполнения этой команды SSH-агент будет хранить приватный ключ, и вам не нужно будет вводить пароль при подключении через SSH (если ключ защищён паролем).

// eval "$(ssh-agent -s)" запускает агент, который будет управлять вашими ключами.
// ssh-add ~/.ssh/id_ed25519 добавляет приватный ключ в агент, чтобы вы могли использовать его для аутентификации без необходимости вводить пароль каждый раз.

git clone <ssh-ключ> + enter + yes // клонирование чужой ветки по ключу (в новую созданную папку)

git clone <ssh-ключ>. + enter  // клонирование в текущую директорию без создания новой папки

// свою ветку пушим в Git:
1. создаем ветку у себя на компе git checkout -b <название>
   переключаемся на нее git branch -M <название> ...  пишем код...
2. проверяем изменения в main в удаленном репозитории через git pull origin main
3. добавляем изменения в совое ветке git add . (индексация)
4. commit -m "текст" 
5. git push origin <название ветки> - пушим в Гит

git branch -D <имя> // удаление своей ветки локально (нужно при этом находится в main или на другой ветке)

